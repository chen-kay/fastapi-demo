"""init commit

Revision ID: faaa478e5b6f
Revises: 
Create Date: 2022-04-03 16:38:13.241107

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'faaa478e5b6f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True, comment='模块/权限名称'),
    sa.Column('key', sa.String(length=50), nullable=True, comment='唯一编码'),
    sa.Column('flag', sa.String(length=10), nullable=True, comment='类型 module:模块 button:操作'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='上级id'),
    sa.Column('sort', sa.Integer(), server_default='100', nullable=True, comment='顺序'),
    sa.Column('status', sa.Integer(), server_default='1', nullable=True, comment='状态 1.正常 2.禁用'),
    sa.ForeignKeyConstraint(['parent_id'], ['access.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_access_flag'), 'access', ['flag'], unique=False)
    op.create_index(op.f('ix_access_id'), 'access', ['id'], unique=False)
    op.create_index(op.f('ix_access_key'), 'access', ['key'], unique=False)
    op.create_index(op.f('ix_access_parent_id'), 'access', ['parent_id'], unique=False)
    op.create_table('company',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('domain', sa.String(length=50), nullable=True, comment='域名'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='企业名称'),
    sa.Column('short_name', sa.String(length=20), nullable=True, comment='简称'),
    sa.Column('website', sa.String(length=50), nullable=True, comment='官网'),
    sa.Column('sort', sa.Integer(), server_default='100', nullable=True, comment='顺序'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.Column('status', sa.Integer(), server_default='1', nullable=True, comment='状态 1.启用 2.禁用 3.到期'),
    sa.Column('expire_at', sa.Date(), nullable=True, comment='到期时间'),
    sa.Column('is_del', sa.Integer(), server_default='0', nullable=True, comment='逻辑删除:0=未删除,1=删除'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_domain'), 'company', ['domain'], unique=True)
    op.create_index(op.f('ix_company_id'), 'company', ['id'], unique=False)
    op.create_table('dict_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=50), nullable=True, comment='唯一编码'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='字典名'),
    sa.Column('sort', sa.Integer(), server_default='100', nullable=True, comment='顺序'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.Column('status', sa.Integer(), server_default='1', nullable=True, comment='状态 1.正常 2.禁用'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dict_type_code'), 'dict_type', ['code'], unique=False)
    op.create_index(op.f('ix_dict_type_id'), 'dict_type', ['id'], unique=False)
    op.create_table('operate_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account', sa.String(length=50), nullable=True, comment='操作人'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='日志名称'),
    sa.Column('opType', sa.Integer(), nullable=True, comment='操作类型'),
    sa.Column('className', sa.String(length=50), nullable=True, comment='api模块'),
    sa.Column('methodName', sa.String(length=50), nullable=True, comment='api方法'),
    sa.Column('url', sa.String(length=200), nullable=True, comment='请求url'),
    sa.Column('param', sa.Text(), nullable=True, comment='请求参数'),
    sa.Column('reqMethod', sa.Text(), nullable=True, comment='请求方法'),
    sa.Column('authorization', sa.String(length=200), nullable=True, comment='认证请求头'),
    sa.Column('userAgent', sa.String(length=200), nullable=True, comment='用户代理'),
    sa.Column('browser', sa.String(length=50), nullable=True, comment='浏览器'),
    sa.Column('os', sa.String(length=50), nullable=True, comment='操作系统'),
    sa.Column('ip', sa.String(length=50), nullable=True, comment='IP地址'),
    sa.Column('location', sa.String(length=50), nullable=True, comment='地址'),
    sa.Column('result', sa.Text(), nullable=True, comment='返回信息'),
    sa.Column('message', sa.String(length=100), nullable=True, comment='消息'),
    sa.Column('success', sa.String(length=50), nullable=True, comment='是否成功'),
    sa.Column('opTime', sa.DateTime(), nullable=True, comment='操作时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_operate_log_account'), 'operate_log', ['account'], unique=False)
    op.create_index(op.f('ix_operate_log_id'), 'operate_log', ['id'], unique=False)
    op.create_index(op.f('ix_operate_log_opTime'), 'operate_log', ['opTime'], unique=False)
    op.create_index(op.f('ix_operate_log_opType'), 'operate_log', ['opType'], unique=False)
    op.create_index(op.f('ix_operate_log_success'), 'operate_log', ['success'], unique=False)
    op.create_table('visit_log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account', sa.String(length=50), nullable=True, comment='访问用户'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='日志名称'),
    sa.Column('visType', sa.Integer(), nullable=True, comment='访问类型'),
    sa.Column('userAgent', sa.String(length=200), nullable=True, comment='用户代理'),
    sa.Column('browser', sa.String(length=50), nullable=True, comment='浏览器'),
    sa.Column('os', sa.String(length=50), nullable=True, comment='操作系统'),
    sa.Column('ip', sa.String(length=50), nullable=True, comment='IP地址'),
    sa.Column('location', sa.String(length=50), nullable=True, comment='地址'),
    sa.Column('message', sa.String(length=100), nullable=True, comment='消息'),
    sa.Column('success', sa.String(length=50), nullable=True, comment='是否成功'),
    sa.Column('visTime', sa.DateTime(), nullable=True, comment='访问时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_visit_log_account'), 'visit_log', ['account'], unique=False)
    op.create_index(op.f('ix_visit_log_id'), 'visit_log', ['id'], unique=False)
    op.create_index(op.f('ix_visit_log_success'), 'visit_log', ['success'], unique=False)
    op.create_index(op.f('ix_visit_log_visTime'), 'visit_log', ['visTime'], unique=False)
    op.create_index(op.f('ix_visit_log_visType'), 'visit_log', ['visType'], unique=False)
    op.create_table('dict_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True, comment='企业id'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='字典id'),
    sa.Column('code', sa.String(length=50), nullable=True, comment='唯一编码'),
    sa.Column('value', sa.String(length=50), nullable=True, comment='值'),
    sa.Column('sort', sa.Integer(), server_default='100', nullable=True, comment='顺序'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['dict_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dict_data_code'), 'dict_data', ['code'], unique=False)
    op.create_index(op.f('ix_dict_data_company_id'), 'dict_data', ['company_id'], unique=False)
    op.create_index(op.f('ix_dict_data_id'), 'dict_data', ['id'], unique=False)
    op.create_index(op.f('ix_dict_data_parent_id'), 'dict_data', ['parent_id'], unique=False)
    op.create_table('org',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True, comment='企业id'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='上级组织'),
    sa.Column('code', sa.String(length=50), nullable=True, comment='唯一编码'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='组织名称'),
    sa.Column('sort', sa.Integer(), server_default='100', nullable=True, comment='顺序'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.Column('status', sa.Integer(), server_default='1', nullable=True, comment='状态 1.正常 2.禁用'),
    sa.Column('is_del', sa.Integer(), server_default='0', nullable=True, comment='逻辑删除:0=未删除,1=删除'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['org.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_org_code'), 'org', ['code'], unique=False)
    op.create_index(op.f('ix_org_company_id'), 'org', ['company_id'], unique=False)
    op.create_index(op.f('ix_org_id'), 'org', ['id'], unique=False)
    op.create_index(op.f('ix_org_parent_id'), 'org', ['parent_id'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True, comment='企业id'),
    sa.Column('code', sa.String(length=50), nullable=True, comment='唯一编码'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='企业名称'),
    sa.Column('sort', sa.Integer(), server_default='100', nullable=True, comment='顺序'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.Column('status', sa.Integer(), server_default='1', nullable=True, comment='状态 1.正常 2.禁用'),
    sa.Column('dataScopeType', sa.Integer(), server_default='1', nullable=True, comment='授权范围 1.仅本人数据 2.本部门数据 3.本部门及以下数据 4.全部数据 5.自定义数据'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_code'), 'role', ['code'], unique=False)
    op.create_index(op.f('ix_role_company_id'), 'role', ['company_id'], unique=False)
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_table('role_access',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True, comment='角色id'),
    sa.Column('access_id', sa.Integer(), nullable=True, comment='权限id'),
    sa.ForeignKeyConstraint(['access_id'], ['access.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_access_access_id'), 'role_access', ['access_id'], unique=False)
    op.create_index(op.f('ix_role_access_id'), 'role_access', ['id'], unique=False)
    op.create_index(op.f('ix_role_access_role_id'), 'role_access', ['role_id'], unique=False)
    op.create_table('role_data_scope',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True, comment='角色id'),
    sa.Column('org_id', sa.Integer(), nullable=True, comment='组织id'),
    sa.ForeignKeyConstraint(['org_id'], ['org.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_data_scope_id'), 'role_data_scope', ['id'], unique=False)
    op.create_index(op.f('ix_role_data_scope_org_id'), 'role_data_scope', ['org_id'], unique=False)
    op.create_index(op.f('ix_role_data_scope_role_id'), 'role_data_scope', ['role_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True, comment='账号'),
    sa.Column('fullname', sa.String(length=50), nullable=True, comment='姓名'),
    sa.Column('nickname', sa.String(length=50), nullable=True, comment='昵称'),
    sa.Column('hashed_password', sa.String(length=100), nullable=True, comment='密码'),
    sa.Column('birth', sa.Date(), nullable=True, comment='生日'),
    sa.Column('sex', sa.Integer(), server_default='0', nullable=True, comment='性别 0.无 1.男 2.女'),
    sa.Column('email', sa.String(length=50), nullable=True, comment='邮箱'),
    sa.Column('mobile', sa.String(length=50), nullable=True, comment='手机号'),
    sa.Column('status', sa.Integer(), server_default='1', nullable=True, comment='状态 1.正常 2.禁用'),
    sa.Column('is_admin', sa.Integer(), server_default='0', nullable=True, comment='管理员 1.是 0.否'),
    sa.Column('is_superuser', sa.Integer(), server_default='0', nullable=True, comment='系统管理员 1.是 0.否'),
    sa.Column('is_del', sa.Integer(), server_default='0', nullable=True, comment='逻辑删除:0=未删除,1=删除'),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['org_id'], ['org.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_role_id'), 'user_role', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_role_id'), table_name='user_role')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_role_data_scope_role_id'), table_name='role_data_scope')
    op.drop_index(op.f('ix_role_data_scope_org_id'), table_name='role_data_scope')
    op.drop_index(op.f('ix_role_data_scope_id'), table_name='role_data_scope')
    op.drop_table('role_data_scope')
    op.drop_index(op.f('ix_role_access_role_id'), table_name='role_access')
    op.drop_index(op.f('ix_role_access_id'), table_name='role_access')
    op.drop_index(op.f('ix_role_access_access_id'), table_name='role_access')
    op.drop_table('role_access')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_index(op.f('ix_role_company_id'), table_name='role')
    op.drop_index(op.f('ix_role_code'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_org_parent_id'), table_name='org')
    op.drop_index(op.f('ix_org_id'), table_name='org')
    op.drop_index(op.f('ix_org_company_id'), table_name='org')
    op.drop_index(op.f('ix_org_code'), table_name='org')
    op.drop_table('org')
    op.drop_index(op.f('ix_dict_data_parent_id'), table_name='dict_data')
    op.drop_index(op.f('ix_dict_data_id'), table_name='dict_data')
    op.drop_index(op.f('ix_dict_data_company_id'), table_name='dict_data')
    op.drop_index(op.f('ix_dict_data_code'), table_name='dict_data')
    op.drop_table('dict_data')
    op.drop_index(op.f('ix_visit_log_visType'), table_name='visit_log')
    op.drop_index(op.f('ix_visit_log_visTime'), table_name='visit_log')
    op.drop_index(op.f('ix_visit_log_success'), table_name='visit_log')
    op.drop_index(op.f('ix_visit_log_id'), table_name='visit_log')
    op.drop_index(op.f('ix_visit_log_account'), table_name='visit_log')
    op.drop_table('visit_log')
    op.drop_index(op.f('ix_operate_log_success'), table_name='operate_log')
    op.drop_index(op.f('ix_operate_log_opType'), table_name='operate_log')
    op.drop_index(op.f('ix_operate_log_opTime'), table_name='operate_log')
    op.drop_index(op.f('ix_operate_log_id'), table_name='operate_log')
    op.drop_index(op.f('ix_operate_log_account'), table_name='operate_log')
    op.drop_table('operate_log')
    op.drop_index(op.f('ix_dict_type_id'), table_name='dict_type')
    op.drop_index(op.f('ix_dict_type_code'), table_name='dict_type')
    op.drop_table('dict_type')
    op.drop_index(op.f('ix_company_id'), table_name='company')
    op.drop_index(op.f('ix_company_domain'), table_name='company')
    op.drop_table('company')
    op.drop_index(op.f('ix_access_parent_id'), table_name='access')
    op.drop_index(op.f('ix_access_key'), table_name='access')
    op.drop_index(op.f('ix_access_id'), table_name='access')
    op.drop_index(op.f('ix_access_flag'), table_name='access')
    op.drop_table('access')
    # ### end Alembic commands ###
